(async () => {
  const loadedWorkbenches = {};
  const loadWorkbench = async (version = "7") => {
    if (loadedWorkbenches[version]) {
      return;
    }
    const assetsVersion = (version.length = 1 ? `${version}-latest` : version);
    const cssElement = document.createElement("link");
    cssElement.rel = "stylesheet";
    cssElement.href = `https://assets.oneweb.mercedes-benz.com/plugin/workbench/core/${assetsVersion}/css/globals.css`;
    document.head.appendChild(cssElement);

    const { defineCustomElements } = await import(
      `https://assets.oneweb.mercedes-benz.com/plugin/workbench/core/${assetsVersion}/loader/index.js`
    );

    loadedWorkbenches[version] = true;

    defineCustomElements(window, {
      transformTagName: (tagName) => `${tagName.replace("wb-", "wb7-")}`
    });
  };

  const dlScriptQuery = `[src*="onedlc"]`;
  // If document.currentScript is not available for some reason,
  // find the onedlc script in the main document
  let currentScript = document.currentScript?.src || document.querySelector(dlScriptQuery)?.src;
  // If no onedlc script was found in the main document,
  // we may need to search for it inside the document's shadow roots
  if (!currentScript) {
    function findRoots(ele) {
      return [ele, ...ele.querySelectorAll("*")]
        .filter((e) => !!e.shadowRoot)
        .flatMap((e) => [e.shadowRoot, ...findRoots(e.shadowRoot)]);
    }
    const roots = findRoots(document.querySelector("body"));
    roots.some((rootNode) => {
      currentScript = rootNode.querySelector(dlScriptQuery)?.src;
      return !!currentScript;
    });
  }

  const baseURL = new URL(currentScript);
  const thisFileName = "onedlc.js";
  const basePath = baseURL.pathname.split(thisFileName)[0];

  class DealerLocator {
    constructor(params) {
      this.settings = params;
      this.isRunning = false;
    }

    async init() {
      if (this.isRunning) {
        throw new Error("DLC is already running");
      }

      this.isRunning = true;

      loadWorkbench();

      let element = this.settings?.element ?? "app";
      if (typeof this.settings.element === "string") {
        element = `#${this.settings.element}`;
      }

      // Init the app
      await (
        await import(`${baseURL.origin}${basePath}/main.js`)
      ).initApp({
        ...this.settings,
        element
      });
    }
  }

  window.DealerLocator = DealerLocator;
})();
