/*! vehicle-context-automation 1.8.1 */
import{initializeLogger as e}from"@seamless/logger";import{SeamlessConnection as t,initializeStore as n}from"@seamless/store";import{formatToMarketSpecificCurrency as r}from"@workbench/core";
/*! connection-vehicle-data 1.8.1 */var o,a;!function(e){e.Primary="primary",e.Secondary="secondary",e.Shop="shop",e.Configurator="configurator",e.About="about",e.Enquiry="enquiry",e.Informed="informed"}(o||(o={})),function(e){e.UpdateCta="UPDATE_CTA",e.UpdatePrice="UPDATE_PRICE",e.UpdateConfiguration="UPDATE_CONFIGURATION"}(a||(a={}));const i="OWC_VEHICLE_DATA",s={modelSeries:"",engineConcept:"",subBrands:[]},c=new class extends t{constructor(){super(i)}get initialState(){const e=window.aemNamespace?.vehicleData||window.top?.aemNamespace?.vehicleData||{};return{...s,...e}}getReducer(){return(e=s,t)=>{switch(t.type){case this.getActionType(a.UpdateCta):return{...e,cta:{...e.cta,...t.payload}};case this.getActionType(a.UpdatePrice):return{...e,price:{...e.price,...t.payload}};case this.getActionType(a.UpdateConfiguration):return{...e,configurationId:t.payload};default:return e}}}getPublicDispatchers(){return{setCta:e=>this.getAction(a.UpdateCta,e),setPrice:e=>this.getAction(a.UpdatePrice,e),setConfigurationId:e=>this.getAction(a.UpdateConfiguration,e)}}},u=async()=>{const e=n();return await e.getConnectionDispatchers(i)},d=e("vehicle-data-store-connection");(async()=>{await(async()=>{const e=n();return await e.addConnection(c)})(),d.log("Initialised store connection")})();const l="cta-automation-service";var f,g,p,h,m;!function(e){e.Configurator="CONFIGURATOR",e.OnlineShop="ONLINE_SHOP",e.ProductPage="PRODUCT_PAGE",e.TestDrive="TEST_DRIVE",e.Enquiry="ENQUIRY",e.Informed="INFORMED"}(f||(f={})),function(e){e.Publish="PUBLISHER",e.Author="AUTHOR"}(g||(g={})),function(e){e.Primary="primary",e.Secondary="secondary",e.Shop="shop",e.Configurator="configurator",e.Info="info",e.CarDrive="cardrive",e.Enquiry="enquiry",e.Informed="informed"}(p||(p={})),function(e){e.Default="default",e.Alternative="alternative"}(h||(h={})),function(e){e.VehicleId="vehicleId"}(m||(m={}));const w=e(l),b=[f.Configurator,f.OnlineShop],y=[f.Configurator],$=[f.OnlineShop,f.ProductPage],v=[f.ProductPage],S=[f.OnlineShop],E=(e,t)=>t.every((t=>Object.keys(e).includes(t))),C=(e,t=!1,n=h.Default)=>{switch(!0){case E(e,b):return t?I(n):[f.OnlineShop,f.ProductPage];case E(e,y):return t?[f.Configurator,f.Enquiry]:[f.Configurator,f.ProductPage];case E(e,$):return t?[f.OnlineShop]:[f.OnlineShop,f.ProductPage];case E(e,v):return t?[f.Enquiry]:[f.ProductPage];case E(e,S):return[f.OnlineShop];default:return w.error("No scenario detected for loaded data:",e),[]}},I=e=>e===h.Default?[f.OnlineShop,f.Configurator]:[f.OnlineShop,f.Enquiry],N=e(l),U=async e=>{const t=(()=>{try{const e=localStorage.getItem("cta_service.deeplink_response_mock_data");if(e){const t=JSON.parse(e);return N.log("Skipping sending request to the deeplink service and using mock data from the local storage:",t),t}}catch(e){N.error("An error occurred during injecting deep link data from the local storage:",e.message)}})();if(t)return t;try{N.log(`Sending request to ${e}`);const t=await fetch(e),n=await t.json();if(t.ok)return n}catch(e){throw Error("Error caused during processing request to deep link service")}},A=(e,{runMode:t,country:n,language:r,modelSeries:o,subBrands:a})=>{const i="AUTHOR"===t?g.Author:g.Publish;return`${e}/vehicle-deeplinks-api/v1/deeplinks/${"AQ"===n?"DE":n}/${r}/model-series/${o}?${new URLSearchParams([...(a||[]).map((e=>["subBrands",e])),["cmsInstance",i]])}`},R=(e,...t)=>{const n=[p.Primary,p.Secondary,p.Shop,p.Configurator,p.Info,p.Enquiry,p.Informed];if(!t.length)return;const r=t.reduce(((t,r,o)=>{const a=n[o],i=e[r];if(a&&i){const e={...i,type:r,baseUrl:i.url};t[a]=e}return t}),{});return Object.keys(r).length?r:void 0},D=(e,t)=>{const n={...e};return Object.keys(n).forEach((e=>{const r=n[e];if(r&&r.type===f.Configurator&&t){const o=O(r.baseUrl,t);n[e]={...r,url:o}}})),n},O=(e,t)=>{const n=new URL(e);return n.hash?P(n,t):n.searchParams.set(m.VehicleId,t),n.toString()},P=(e,t)=>{const n=e.hash.indexOf("?")>-1?e.hash.substring(e.hash.lastIndexOf("?")+1):"",r=new URLSearchParams(n);r.set(m.VehicleId,t),e.hash=`${e.hash.replace(`?${n}`,"")}?${r.toString()}`},T="OWC_AEM_ENV";new class extends t{constructor(){super(T)}get initialState(){const e=window.aemNamespace?.environmentVariables||window.top?.aemNamespace?.environmentVariables,t=window.aemNamespace?.pageEnvironmentVariables||window.top?.aemNamespace?.pageEnvironmentVariables;return e&&t?{...e,...t}:{}}getReducer(){return()=>this.initialState}getPublicDispatchers(){return{}}};const _=e=>{const t=n(),r=n=>{e(n,(()=>t.unsubscribe(i,r)))};t.subscribe(i,r)},k=()=>new Promise((e=>{n().once(T,e)})),B=e(l),M="https://api.oneweb.mercedes-benz.com",q=e=>{let t=!1;_((async({cta:n,configurationId:r},o)=>{if(e!==r&&n&&!t){o();const e=D(n,r);t=!0;(await u()).setCta(e),B.log(`Updated CTAs with configurationID: ${r} added`),q(r)}}))},L=async(e,t=[],n,r,o,a)=>{const{country:i,language:s,runMode:c}=await k(),u=A(M,{runMode:c,country:i,language:s,modelSeries:e,subBrands:t}),d=await U(u);if(d){B.log(`Data for ${e} has been loaded:`,d),n&&(d[f.Enquiry]=n),r&&(d[f.Informed]=r);const t=C(d,!1,o);B.log("Mapping buttons for the following scenario:",t);const i=R(d,...t);if(i){const t=D(i,a||"");return B.log(`Buttons for ${e} have been mapped:`,t),t}B.error(`No buttons for ${e} mapped.`)}},x="price-automation-service",j=e(x);var H;!function(e){e.Price="PRICE"}(H||(H={}));const V=(e,t)=>{const n=`${e.language}-${e.country}`,o=Number("min"===t?e.min:e.max);return r(o,n)},F=e(x),z=async(e,t,n=[])=>{const{apiUri:r,country:o,language:a}=await k();if(r&&e)try{const i=((e,{country:t,language:n,modelSeries:r,engineConcept:o,subBrands:a})=>{const i=new URL(`${e}/vmds-highlights-api/v1/highlights/${t}/${n}/${r}`);for(const e of a)i.searchParams.append("subBrands",e);return o&&i.searchParams.append("engineConcept",o),i.toString()})(r,{country:o,language:a,modelSeries:e,engineConcept:t,subBrands:n}),s=await(async e=>{try{j.log(`Sending request to ${e}`);const t=await fetch(e),n=await t.json();if(t.ok)return n}catch(e){throw Error("Error caused during processing request to VMDS service")}})(i);if(!s)return void F.error(`No data loaded from VMDS service for ${e}.`);F.log(`Data for ${e} has been loaded:`,s);const c=((e,t,n)=>{const r=e.i18n,o=e.highlights[H.Price],{unit:a,footnoteI18nKey:i}=o,s={min:String(o.min),max:String(o.max),unit:o.unit,language:t,country:n},c={unit:a,min:V(s,"min"),max:V(s,"max"),pricePrefixLabel:r.PRICE};return i&&r[i]&&(c.priceFootnoteLabel=r[i]),c})(s,a,o);return F.log(`Formatted price for ${e} have been returned:`,c),c}catch(e){F.error(e.message)}else F.error("No apiUri or modelSeries found, skipping price service initialization.")};_((async({modelSeries:e,subBrands:t,cta:n={}},r)=>{let o=!1;const{runMode:a,country:i,language:s,vehicleData:c}=await k(),{informed:d,enquiry:l}=n;let g=h.Default;if(e&&!o)try{const n=A(M,{runMode:a,country:i,language:s,modelSeries:e,subBrands:t});let p=await U(n);if(!p)return void B.error(`No data loaded from deep link service for ${e}.`);0===Object.keys(l).length&&B.error(`No enquiry configuration loaded for ${e}`,l),B.log(`Data for ${e} has been loaded:`,p),p={...p,[f.Enquiry]:l,[f.Informed]:d},c?.cta&&(g=c.cta.scenario,B.log(`Automated CTA scenario switched to ${g}`));const h=C(p,!0,g);B.log("Mapping buttons for the following scenario:",h);const m=R(p,...h);m?(r(),o=!0,(await u()).setCta(m),B.log(`Buttons for ${e} have been added to the store:`,m)):B.error(`No buttons for ${e} added to the store.`)}catch(e){B.error(e.message)}else B.error("No apiUri or modelSeries found, skipping CTA service initialization")})),_((async({modelSeries:e,engineConcept:t,subBrands:n},r)=>{r();const o=await z(e,t,n);o?((await u()).setPrice(o),F.log(`Price data for ${e} have been added to the store:`,o)):F.error(`No price data for ${e} added to the store.`)}));q("");export{L as loadCtaConfiguration,z as loadPriceData};
//# sourceMappingURL=index.mjs.map
