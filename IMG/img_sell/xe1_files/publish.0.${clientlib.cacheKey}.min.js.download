'use strict';

(function(window, document) {

    const selector = 'cmm-cookie-banner';

    const createCookieBannerElementGetter = () => {
        let element;
        return () => {
            if (!element) {
                const elements = document.getElementsByTagName(selector);
                element = elements.length ? elements[0] : null;
            }
            return element;
        };
    };

    const getCookieBannerElement = createCookieBannerElementGetter();

    const findData = () => {
        const tag = getCookieBannerElement();
        return tag?.dataset || {};
    };

    const getTrimmedOrDefault = (value) => (value || '').trim();

    const findLanguageCandidates = () => {
        const data = findData();
        const currentLanguage = getTrimmedOrDefault(data.language);
        const currentMarket = getTrimmedOrDefault(data.market).toLowerCase();
        const candidates = currentLanguage.length ? [currentLanguage] : [];
        if (currentMarket.length) {
            candidates.unshift(currentLanguage + '_' + currentMarket);
        }

        return candidates;
    };

    const changeLanguage = language => {
        const cookieBanner = getCookieBannerElement();
        cookieBanner?.changeLanguage(language);
    };

    const tryChangeLanguage = (candidates, availableLanguages) => {
        const language = candidates.find(p => availableLanguages.includes(p));
        if (language) {
            changeLanguage(language);
        }
    };

    const getLanguageSettings = async () => {
        const cookieBanner = getCookieBannerElement();
        return await cookieBanner?.getLanguageSettings();
    };

    document.addEventListener('usercentrics-consents-loaded', async () => {
        const candidates = findLanguageCandidates();

        const languageSettings = await getLanguageSettings();
        const selectedLanguage = languageSettings?.selected;
        const availableLanguages = languageSettings?.available;

        if (!candidates.includes(selectedLanguage)) {
            tryChangeLanguage(candidates, availableLanguages)
        }
    });

}(window, document));
